let playerHP = 50;
let opponentHP = 50;
let history = []; // ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô

function playCard(playerChoice) {
  if (playerHP <= 0 || opponentHP <= 0) return; // ‡∏ñ‡πâ‡∏≤‡∏ú‡∏•‡πÄ‡∏Å‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà

  const choices = ["rock", "paper", "scissors"];
  const opponentChoice = choices[Math.floor(Math.random() * 3)]; // ‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ñ‡∏π‡πà‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ

  // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
  document.getElementById("player-card").innerHTML = `<p>‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${getChoiceIcon(playerChoice)}</p>
    <div class="cards">
      <button onclick="playCard('rock')">ü™® ‡∏Ñ‡πâ‡∏≠‡∏ô</button>
      <button onclick="playCard('paper')">üìÑ ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©</button>
      <button onclick="playCard('scissors')">‚úÇÔ∏è ‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£</button>
    </div>`;

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
  startCountdown(() => {
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ñ‡∏π‡πà‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
    document.getElementById("opponent-card-content").textContent = `‡∏Ñ‡∏π‡πà‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${getChoiceIcon(opponentChoice)}`;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡πÅ‡∏û‡πâ‡∏ä‡∏ô‡∏∞
    const result = determineWinner(playerChoice, opponentChoice);

    let resultMessage = "";
    let damage = 0;

    if (result === "win") {
      damage = rollDice();
      opponentHP -= damage;
      if (opponentHP < 0) opponentHP = 0;
      resultMessage = `‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞! ‡∏Ñ‡∏π‡πà‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ${damage} ‡∏´‡∏ô‡πà‡∏ß‡∏¢`;
    } else if (result === "lose") {
      damage = rollDice();
      playerHP -= damage;
      if (playerHP < 0) playerHP = 0;
      resultMessage = `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ! ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏™‡∏µ‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ${damage} ‡∏´‡∏ô‡πà‡∏ß‡∏¢`;
    } else {
      resultMessage = "‡πÄ‡∏™‡∏°‡∏≠‡∏Å‡∏±‡∏ô! ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï";
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï HP ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    document.getElementById("opponent-hp").textContent = opponentHP;
    document.getElementById("player-hp").textContent = playerHP;
    document.getElementById("result").textContent = resultMessage;

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
    history.push({
      playerChoice: playerChoice,
      opponentChoice: opponentChoice,
      result: resultMessage,
      damage: damage
    });
    updateHistory();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡πÄ‡∏Å‡∏°
    if (playerHP === 0) {
      alert("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡πâ! ‡πÄ‡∏Å‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß");
      resetGame(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏û‡πâ
    } else if (opponentHP === 0) {
      alert("‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏ô‡∏∞! ‡πÄ‡∏Å‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß");
      resetGame(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏ô‡∏∞
    }
  });
}

function startCountdown(callback) {
  let countdown = 3;
  const countdownElement = document.getElementById("countdown");
  countdownElement.textContent = countdown;

  const interval = setInterval(() => {
    countdown -= 1;
    if (countdown === 0) {
      clearInterval(interval);
      countdownElement.textContent = "‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πå‡∏î!";
      callback(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πå‡∏î
    } else {
      countdownElement.textContent = countdown;
    }
  }, 1000);
}

function determineWinner(player, opponent) {
  if (player === opponent) return "tie";
  if (
    (player === "rock" && opponent === "scissors") ||
    (player === "paper" && opponent === "rock") ||
    (player === "scissors" && opponent === "paper")
  ) {
    return "win";
  }
  return "lose";
}

function rollDice() {
  const die1 = Math.floor(Math.random() * 6) + 1;
  const die2 = Math.floor(Math.random() * 6) + 1;
  return die1 + die2;
}

function resetGame() {
  playerHP = 50;
  opponentHP = 50;
  document.getElementById("player-hp").textContent = playerHP;
  document.getElementById("opponent-hp").textContent = opponentHP;
  document.getElementById("result").textContent = "";
  document.getElementById("player-card").innerHTML = `<p>‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
    <div class="cards">
      <button onclick="playCard('rock')">ü™® ‡∏Ñ‡πâ‡∏≠‡∏ô</button>
      <button onclick="playCard('paper')">üìÑ ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©</button>
      <button onclick="playCard('scissors')">‚úÇÔ∏è ‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£</button>
    </div>`;
  document.getElementById("opponent-card-content").textContent = "‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà";
  document.getElementById("countdown").textContent = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î...";
  history = []; // ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô
  updateHistory();
}

function updateHistory() {
  const historyList = document.getElementById("history-list");
  const row = document.createElement("tr");

  const roundCell = document.createElement("td");
  roundCell.textContent = history.length;
  row.appendChild(roundCell);

  const playerChoiceCell = document.createElement("td");
  playerChoiceCell.textContent = getChoiceIcon(history[history.length - 1].playerChoice);
  row.appendChild(playerChoiceCell);

  const opponentChoiceCell = document.createElement("td");
  opponentChoiceCell.textContent = getChoiceIcon(history[history.length - 1].opponentChoice);
  row.appendChild(opponentChoiceCell);

  const resultCell = document.createElement("td");
  resultCell.textContent = history[history.length - 1].result;
  row.appendChild(resultCell);

  const damageCell = document.createElement("td");
  damageCell.textContent = history[history.length - 1].damage ? history[history.length - 1].damage : "0";
  row.appendChild(damageCell);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏£‡∏Å
  historyList.insertBefore(row, historyList.firstChild);
}

function getChoiceIcon(choice) {
  if (choice === "rock") return "ü™® ‡∏Ñ‡πâ‡∏≠‡∏ô";
  if (choice === "paper") return "üìÑ ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©";
  if (choice === "scissors") return "‚úÇÔ∏è ‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£";
  return "";
}
